@version: 4.2
@include "scl.conf"

# Global options
options {
    chain_hostnames(off);
    flush_lines(0);
    use_dns(no);
    use_fqdn(no);
    dns_cache(no);
    owner("root");
    group("adm");
    perm(0640);
    stats_freq(0);
    bad_hostname("^gconfd$");
    create_dirs(yes);
    dir_perm(0755);
};

# Sources - Listen for syslog messages
source s_network {
    # Standard syslog on port 514
    network(
        transport("udp")
        port(514)
        flags(no-parse)
    );
    network(
        transport("tcp")
        port(514)
        flags(no-parse)
    );
    # Alternative port 601 
    network(
        transport("tcp")
        port(601)
    );
    # TLS syslog on port 6514
    syslog(
        transport("tls")
        port(6514)
        tls(
            peer-verify(optional-untrusted)
            ca-dir("/config/ca.d")
            key-file("/config/server.key")
            cert-file("/config/server.crt")
        )
    );
};

# Parser to extract structured data
parser p_syslog {
    syslog-parser(
        flags(assume-utf8, validate-utf8)
    );
};

# Destinations
# Local file storage
destination d_local {
    file("/var/log/syslog-ng/${HOST}/${YEAR}-${MONTH}-${DAY}.log"
        template("${ISODATE} ${HOST} ${FACILITY}.${PRIORITY} ${PROGRAM}[${PID}]: ${MESSAGE}\n")
        template_escape(no)
        create_dirs(yes)
    );
};

# Elasticsearch destination
destination d_elasticsearch {
    elasticsearch-http(
        url("http://elasticsearch:9200/_bulk")
        index("syslog-${YEAR}.${MONTH}.${DAY}")
        type("")
        workers(4)
        batch-lines(100)
        timeout(10)
        template("$(format-json 
            --scope rfc5424 
            --scope dot-nv-pairs 
            --rekey .* --shift 1 
            --pair @timestamp=${ISODATE}
            --pair device=${HOST}
            --pair facility=${FACILITY}
            --pair priority=${PRIORITY}
            --pair level=${LEVEL}
            --pair program=${PROGRAM}
            --pair pid=${PID}
            --pair message=${MESSAGE}
            --pair source_ip=${SOURCEIP}
        )")
        persist-name("elasticsearch-syslog")
    );
};

# Filters for different log levels
filter f_debug { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

# Log processing pipeline
log {
    source(s_network);
    parser(p_syslog);
    
    # Send to local files
    destination(d_local);
    
    # Send to Elasticsearch
    destination(d_elasticsearch);
};